import pygame
from setting import BLOCK_SIDE
from game_object import GameObject

room_1 = [
    "w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w . . w . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w . . w . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . w . w w w . w w w w w w . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . w . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w w . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . w w . . w . . w w w w w . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w . . w . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . w . . w . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . w . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w"]

room_2 = [
    "w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . w",
    "w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w w"]

class Wall(GameObject):
    def __init__(self, type: str, pos=(0, 0), angle=0.0):
        super().__init__(type, pos, angle)
        self.rect = pygame.Rect(self.x * BLOCK_SIDE, self.y * BLOCK_SIDE, BLOCK_SIDE, BLOCK_SIDE)

text_maps = {
    "room_1": room_1,
    "room_2": room_2,
}

dict_rooms = {}
for name, text_map in text_maps.items():
    game_map = set()
    for y, line in enumerate(text_map):
        for x, symbol in enumerate(line.replace(" ", "")):
            if symbol == "w":
                game_map.add(Wall("w", (x, y)))
    dict_rooms[name] = game_map